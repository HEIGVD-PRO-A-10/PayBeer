{% extends "layout.html.twig" %}

{% block main %}
    <h1>
        <i class="fa fa-user-edit"></i>
        {% if user.firstname is not empty and user.lastname is not empty %}
            {{ user.firstname }} {{ user.lastname }}
        {% else %}
            RFID {{ user.tagRfid }}
        {% endif %}
    </h1>
    <hr>
    <form method="post" class="needs-validation" novalidate>
        <div class="form-row">
            <div class="col-sm-6 mb-3">
                <label for="firstname">Prénom</label>
                <input type="text" class="form-control" id="firstname" name="firstname" value="{{ user.firstname }}"
                       required>
                <div class="invalid-feedback">
                    Le prénom est requis.
                </div>
            </div>
            <div class="col-sm-6 mb-3">
                <label for="lastname">Nom</label>
                <input type="text" class="form-control" id="lastname" name="lastname" value="{{ user.lastname }}"
                       required>
                <div class="invalid-feedback">
                    Le nom est requis.
                </div>
            </div>
        </div>
        {% if user.status == 'BLOCKED' %}
            <div class="alert alert-warning" role="alert">
                <strong><i class="fa fa-exclamation-triangle"></i> Attention:</strong> Le compte
                de {{ user.firstname }} {{ user.lastname }} est actuellement bloqué !
            </div>
        {% endif %}
        <button class="btn btn-primary" type="submit"><i class="fa fa-edit"></i> Modifier</button>
        <a href="{{ referer }}" class="btn btn-outline-secondary">Annuler</a>
    </form>

    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
{% endblock %}
